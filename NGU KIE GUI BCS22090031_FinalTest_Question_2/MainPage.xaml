<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="NGU_KIE_GUI_BCS22090031_FinalTest_Question_2.MainPage">

    <StackLayout Margin="40,0"
             VerticalOptions="CenterAndExpand">
        <Entry x:Name="PhoneEntry"
           Placeholder="Phone Number"
           HorizontalTextAlignment="Center"
           HorizontalOptions="FillAndExpand">
            <Entry.Behaviors>
                <toolkit:CharactersValidationBehavior 
                Flags="ValidateOnValueChanged"
                RegexPattern="^[0-9]+$"
                MinimumCharacterTypeCount="1"
                IsValid="True" />
            </Entry.Behaviors>
        </Entry>
        <Label Text="Invalid Phone Number" TextColor="Red" IsVisible="False">
            <Label.Triggers>
                <DataTrigger TargetType="Label"
                         Binding="{Binding Source={x:Reference PhoneEntry}, Path=Behaviors[0].IsValid}"
                         Value="False">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
                <DataTrigger TargetType="Label"
                         Binding="{Binding Source={x:Reference PhoneEntry}, Path=Behaviors[0].IsValid}"
                         Value="True">
                    <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
            </Label.Triggers>
        </Label>


        <Entry x:Name="PasswordEntry"
           IsPassword="True"
           Placeholder="Password"
           HorizontalTextAlignment="Center"
           HorizontalOptions="FillAndExpand">
            <Entry.Behaviors>
                <toolkit:CharactersValidationBehavior 
                Flags="ValidateOnValueChanged"
                MinimumCharacterTypeCount="5"
                IsValid="True" />
            </Entry.Behaviors>
        </Entry>

        <Label Text="Password length should be greater than 5" TextColor="Red" IsVisible="False">
            <Label.Triggers>
                <DataTrigger TargetType="Label"
                         Binding="{Binding Source={x:Reference PasswordEntry}, Path=Behaviors[0].IsValid}"
                         Value="False">
                    <Setter Property="IsVisible" Value="True" />
                </DataTrigger>
                <DataTrigger TargetType="Label"
                         Binding="{Binding Source={x:Reference PasswordEntry}, Path=Behaviors[0].IsValid}"
                         Value="True">
                    <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
            </Label.Triggers>
        </Label>


        <StackLayout Orientation="Horizontal"
                 HorizontalOptions="FillAndExpand" VerticalOptions="Center"
                 Margin="0,15">
            <CheckBox
            x:Name="TermsAndConditionsCheckbox"
            HorizontalOptions="Start"/>
            <Label x:Name="TermsAndConditionsLabel"
               Text="I have read the terms and conditions"
               TextColor="Black" FontSize="Small"
               HorizontalOptions="Start" Margin="5">
            </Label>
        </StackLayout>

        <Button Text="Register" HorizontalOptions="FillAndExpand" IsEnabled="False" FontSize="Medium" CornerRadius="20"
            VerticalOptions="EndAndExpand"
            x:Name="RegisterButton">
            <Button.Triggers>
                <MultiTrigger TargetType="Button">
                    <MultiTrigger.Conditions>
                        <BindingCondition Binding="{Binding Source={x:Reference PhoneEntry}, Path=Behaviors[0].IsValid}" Value="True" />
                        <BindingCondition Binding="{Binding Source={x:Reference PasswordEntry}, Path=Behaviors[0].IsValid}" Value="True" />
                        <BindingCondition Binding="{Binding Source={x:Reference TermsAndConditionsCheckbox}, Path=IsChecked}" Value="True" />

                    </MultiTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True" />
                </MultiTrigger>
            </Button.Triggers>
        </Button>
    </StackLayout>

</ContentPage>
